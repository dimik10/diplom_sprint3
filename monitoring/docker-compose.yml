version: '3.2'
services:
    prometheus:
        image: prom/prometheus:latest
        volumes:
            - ./prometheus:/etc/prometheus/
        command:
            - --config.file=/etc/prometheus/prometheus.yml
        ports:
            - 0.0.0.0:9090:9090
        restart: always

    node-exporter:
        image: prom/node-exporter
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        hostname: monitoring
        command:
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --collector.filesystem.ignored-mount-points
            - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
        ports:
            - 0.0.0.0:9100:9100
        restart: always
    blackbox-exporter:
        image: prom/blackbox-exporter
        ports:
            - 0.0.0.0:9115:9115
        restart: always
        volumes:
            - ./blackbox:/config
        command: --config.file=/config/blackbox.yml
    cadvisor:
        image: gcr.io/cadvisor/cadvisor:latest
        container_name: cadvisor
        ports:
           - 8081:8081
        volumes:
           - /:/rootfs:ro
           - /var/run:/var/run:rw
           - /sys:/sys:ro
           - /var/lib/docker/:/var/lib/docker:ro
        depends_on:
           - redis
    redis:
        image: redis:latest
        container_name: redis
        ports:
          - 6379:6379

    grafana:
       image: grafana/grafana:9.5.6-ubuntu
       container_name: grafana
       hostname: grafana
       user: "0"
       ports:
         - "3000:3000"
       volumes:
         - ./grafana:/var/lib/grafana
         - ./grafana/provisioning/:/etc/grafana/provisioning/
       restart: unless-stopped
       environment:
         - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
         - GF_AUTH_ANONYMOUS_ENABLED=true
         - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
       entrypoint:
         - sh
         - -euc
         - |
           mkdir -p /etc/grafana/provisioning/datasources
           cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
           apiVersion: 1
           datasources:
           - name: Loki
             type: loki
             access: proxy 
             orgId: 1
             url: http://loki:3100
             basicAuth: false
             isDefault: true
             version: 1
             editable: false
           EOF
           /run.sh
       networks:
         - default
       depends_on:
         - prometheus
         - loki

    loki:
      image: grafana/loki:2.8.0
      container_name: loki
      hostname: loki
      ports:
        - "3100:3100"
      volumes:
        - ./loki/:/etc/loki/
      command: -config.file=/etc/loki/local-config.yaml
      environment:
        TZ: "Europe/Moscow"
      networks:
        - default
      depends_on:
        - promtail

    promtail:
      image: grafana/promtail:2.8.0
      container_name: promtail
      volumes:
        - /var/log:/var/log
        - ./promtail/:/etc/promtail/
      command: 
        - --config.file=/etc/promtail/config.yml
      networks:
        - default

    alertmanager-bot:
        command:
        - --alertmanager.url=http://alertmanager:9093
        - --log.level=info
        - --store=bolt
        - --bolt.path=/data/bot.db
        environment:
          TELEGRAM_ADMIN: "484387453"
          TELEGRAM_TOKEN: 6181658501:AAElwqpQSejeKmdkN13ew3QXksExjnZYCzE
        image: metalmatze/alertmanager-bot:0.4.3
        ports:
        - 0.0.0.0:8080:8080
        restart: always
        volumes:
        - ./data:/data

    alertmanager:
      image: prom/alertmanager:v0.21.0
      ports:
        - 0.0.0.0:9093:9093
      volumes:
        - ./alertmanager/:/etc/alertmanager/
      restart: always
      command:
        - '--config.file=/etc/alertmanager/config.yml'
        - '--storage.path=/etc/alertmanager/data'