version: '3.2'
services:
    prometheus:
        image: prom/prometheus:latest
        volumes:
            - ./prometheus:/etc/prometheus/
        command:
            - --config.file=/etc/prometheus/prometheus.yml
        ports:
            - 0.0.0.0:9090:9090
        restart: always

    node-exporter:
        image: prom/node-exporter
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        hostname: monitoring
        command:
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --collector.filesystem.ignored-mount-points
            - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
        ports:
            - 127.0.0.1:9100:9100
        restart: always
    blackbox-exporter:
        image: prom/blackbox-exporter
        ports:
            - 127.0.0.1:9115:9115
        restart: always
        volumes:
            - ./blackbox:/config
        command: --config.file=/config/blackbox.yml
#    cadvisor:
#        image: gcr.io/cadvisor/cadvisor:latest
#        container_name: cadvisor
#        ports:
#           - 8080:8080
#        volumes:
#           - /:/rootfs:ro
#           - /var/run:/var/run:rw
#           - /sys:/sys:ro
#           - /var/lib/docker/:/var/lib/docker:ro
#        depends_on:
#           - redis
#    redis:
#        image: redis:latest
#        container_name: redis
#        ports:
#          - 6379:6379
    grafana:
        image: grafana/grafana
        depends_on:
            - prometheus
        ports:
            - 0.0.0.0:3000:3000
        volumes:
            - ./grafana:/var/lib/grafana:rw
            - ./grafana/provisioning/:/etc/grafana/provisioning/:rw
        restart: always

    alertmanager-bot:
        command:
        - --alertmanager.url=http://alertmanager:9093
        - --log.level=info
        - --store=bolt
        - --bolt.path=/data/bot.db
        environment:
          TELEGRAM_ADMIN: "idadmin"
          TELEGRAM_TOKEN: 618160:AAw3QXksExjnZYC
        image: metalmatze/alertmanager-bot:0.4.3
        ports:
        - 127.0.0.1:8080:8080
        restart: always
        volumes:
        - ./data:/data

    alertmanager:
      image: prom/alertmanager:v0.21.0
      ports:
        - 0.0.0.0:9093:9093
      volumes:
        - ./alertmanager/:/etc/alertmanager/
      restart: always
      command:
        - '--config.file=/etc/alertmanager/config.yml'
        - '--storage.path=/etc/alertmanager/data'
# Разворачиваем контейнер loki и promtail - для логирования (порты 3100 и 9080)
    loki:
      image: grafana/loki:2.8.0
      container_name: loki
      hostname: loki
      ports:
        - "3100:3100"
      volumes:
        - ./loki/:/etc/loki/
      command: -config.file=/etc/loki/local-config.yaml
      environment:
        TZ: "Europe/Moscow"
      networks:
        - default
      depends_on:
        - promtail

    promtail:
      image: grafana/promtail:2.8.0
      container_name: promtail
      volumes:
        - /var/log:/var/log
        - ./promtail/:/etc/promtail/
      command: 
        - --config.file=/etc/promtail/config.yml
#    deploy:
#      placement:
#        constraints:
#          - node.role==manager
#      restart_policy:
#        condition: on-failure
#    environment:
#      TZ: "Europe/Moscow"
      networks:
        - default
